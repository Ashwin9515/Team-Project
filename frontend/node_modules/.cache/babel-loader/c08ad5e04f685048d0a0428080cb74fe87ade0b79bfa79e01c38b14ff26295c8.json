{"ast":null,"code":"var _jsxFileName = \"/workspaces/TeamProject/PE05-Recipe-Finder/RecipeFinder/frontend/src/components/AddRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddRecipe() {\n  _s();\n  const [form, setForm] = useState({\n    recipe_name: \"\",\n    ingredients: \"\",\n    cooking_instructions: \"\"\n  });\n  const navigate = useNavigate();\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new recipe to the database.\n    const newRecipe = {\n      ...form\n    };\n    await fetch(`${backendUrl}/recipe`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newRecipe)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      recipe_name: \"\",\n      ingredients: \"\",\n      cooking_instructions: \"\"\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipe_name\",\n          children: \"Recipe Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"recipe_name\",\n          value: form.recipe_name,\n          onChange: e => updateForm({\n            recipe_name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingredients\",\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"ingredients\",\n          value: form.ingredients,\n          onChange: e => updateForm({\n            ingredients: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cooking_instructions\",\n          children: \"Cooking Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"cooking_instructions\",\n          value: form.cooking_instructions,\n          onChange: e => updateForm({\n            cooking_instructions: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Recipe\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 4\n  }, this);\n}\n_s(AddRecipe, \"QYMtLKfJmEsJ7QG8k39Cz7Loq80=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AddRecipe","_s","form","setForm","recipe_name","ingredients","cooking_instructions","navigate","backendUrl","process","env","REACT_APP_BACKEND_URL","updateForm","value","prev","onSubmit","e","preventDefault","newRecipe","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onChange","target","_c","$RefreshReg$"],"sources":["/workspaces/TeamProject/PE05-Recipe-Finder/RecipeFinder/frontend/src/components/AddRecipe.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n \nexport default function AddRecipe() {\n const [form, setForm] = useState({\n   recipe_name: \"\",\n   ingredients: \"\",\n   cooking_instructions: \"\",\n });\n const navigate = useNavigate();\n const backendUrl = process.env.REACT_APP_BACKEND_URL;\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new recipe to the database.\n   const newRecipe = { ...form };\n \n   await fetch(`${backendUrl}/recipe`, {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newRecipe),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setForm({ recipe_name: \"\", ingredients: \"\", cooking_instructions: \"\" });\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n   <div>\n     <h3>Add Recipe</h3>\n     <form onSubmit={onSubmit}>\n       <div className=\"form-group\">\n         <label htmlFor=\"recipe_name\">Recipe Name</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"recipe_name\"\n           value={form.recipe_name}\n           onChange={(e) => updateForm({ recipe_name: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"ingredients\">Ingredients</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"ingredients\"\n           value={form.ingredients}\n           onChange={(e) => updateForm({ ingredients: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"cooking_instructions\">Cooking Instructions</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"cooking_instructions\"\n           value={form.cooking_instructions}\n           onChange={(e) => updateForm({ cooking_instructions: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <input\n           type=\"submit\"\n           value=\"Add Recipe\"\n           className=\"btn btn-primary\"\n         />\n       </div>\n     </form>\n   </div>\n );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}