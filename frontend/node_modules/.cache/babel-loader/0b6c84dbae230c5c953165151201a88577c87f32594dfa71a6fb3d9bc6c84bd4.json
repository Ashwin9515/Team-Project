{"ast":null,"code":"var _jsxFileName = \"/workspaces/TeamProject/PE05-Recipe-Finder/RecipeFinder/frontend/src/components/edit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n  const [form, setForm] = useState({\n    recipe_name: \"\",\n    ingredients: \"\",\n    cooking_instructions: \"\",\n    recipes: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`${backendUrl}/recipe/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const recipe = await response.json();\n      if (!recipe) {\n        window.alert(`Recipe with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(recipe);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedRecipe = {\n      recipe_name: form.recipe_name,\n      ingredients: form.ingredients,\n      cooking_instructions: form.cooking_instructions\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`${backendUrl}/recipe/${params.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(editedRecipe),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipe_name\",\n          children: \"Recipe Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"recipe_name\",\n          value: form.recipe_name,\n          onChange: e => updateForm({\n            recipe_name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingredients\",\n          children: \"Ingredients: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"ingredients\",\n          value: form.ingredients,\n          onChange: e => updateForm({\n            ingredients: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cooking_instructions\",\n          children: \"Cooking Instructions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"cooking_instructions\",\n          value: form.cooking_instructions,\n          onChange: e => updateForm({\n            cooking_instructions: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Recipe\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 4\n  }, this);\n}\n_s(Edit, \"KojQgZ1lGGipKw/YIoX0LltKtf4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Edit","_s","form","setForm","recipe_name","ingredients","cooking_instructions","recipes","params","navigate","backendUrl","process","env","REACT_APP_BACKEND_URL","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","recipe","json","updateForm","value","prev","onSubmit","e","preventDefault","editedRecipe","method","body","JSON","stringify","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","onChange","target","_c","$RefreshReg$"],"sources":["/workspaces/TeamProject/PE05-Recipe-Finder/RecipeFinder/frontend/src/components/edit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n \nexport default function Edit() {\n const [form, setForm] = useState({\n   recipe_name: \"\",\n   ingredients: \"\",\n   cooking_instructions: \"\",\n   recipes: [],\n });\n const params = useParams();\n const navigate = useNavigate();\n const backendUrl = process.env.REACT_APP_BACKEND_URL;\n \n useEffect(() => {\n   async function fetchData() {\n     const id = params.id.toString();\n     const response = await fetch(`${backendUrl}/recipe/${params.id.toString()}`);\n \n     if (!response.ok) {\n       const message = `An error has occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const recipe = await response.json();\n     if (!recipe) {\n       window.alert(`Recipe with id ${id} not found`);\n       navigate(\"/\");\n       return;\n     }\n \n     setForm(recipe);\n   }\n \n   fetchData();\n \n   return;\n }, [params.id, navigate]);\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n async function onSubmit(e) {\n   e.preventDefault();\n   const editedRecipe = {\n     recipe_name: form.recipe_name,\n     ingredients: form.ingredients,\n     cooking_instructions: form.cooking_instructions,\n   };\n \n   // This will send a post request to update the data in the database.\n   await fetch(`${backendUrl}/recipe/${params.id}`, {\n     method: \"PATCH\",\n     body: JSON.stringify(editedRecipe),\n     headers: {\n       'Content-Type': 'application/json'\n     },\n   });\n \n   navigate(\"/\");\n }\n \n // This following section will display the form that takes input from the user to update the data.\n return (\n   <div>\n     <h3>Update Recipe</h3>\n     <form onSubmit={onSubmit}>\n       <div className=\"form-group\">\n         <label htmlFor=\"recipe_name\">Recipe Name: </label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"recipe_name\"\n           value={form.recipe_name}\n           onChange={(e) => updateForm({ recipe_name: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"ingredients\">Ingredients: </label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"ingredients\"\n           value={form.ingredients}\n           onChange={(e) => updateForm({ ingredients: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"cooking_instructions\">Cooking Instructions: </label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"cooking_instructions\"\n           value={form.cooking_instructions}\n           onChange={(e) => updateForm({ cooking_instructions: e.target.value })}\n         />\n       </div>\n       <br />\n \n       <div className=\"form-group\">\n         <input\n           type=\"submit\"\n           value=\"Update Recipe\"\n           className=\"btn btn-primary\"\n         />\n       </div>\n     </form>\n   </div>\n );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}